// Generated by CoffeeScript 1.9.3
(function() {
  var R, clean, hanify, newSS, styles;

  (function() {
    var s;
    s = document.getElementById("tongwenlet_tw2");
    if (s != null) {
      document.body.removeChild(s);
    }
    s = document.createElement("script");
    s.language = "javascript";
    s.type = "text/javascript";
    s.src = "//tongwen.openfoundry.org/NewTongWen/tools/bookmarklet_tw2.js";
    s.id = "tongwenlet_tw2";
    document.body.appendChild(s);
  })();

  (function() {
    var s;
    s = document.createElement("script");
    s.language = "javascript";
    s.type = "text/javascript";
    s.src = "//cdnjs.cloudflare.com/ajax/libs/Han/3.2.5/han.min.js";
    document.body.appendChild(s);
    document.getElementsByTagName('html')[0].setAttribute("lang", "zh-Hant-TW");
  })();

  hanify = function(ele) {
    var loopsiloop;
    return loopsiloop = function() {
      return setTimeout((function() {
        var e;
        try {
          return Han(ele).initCond().renderElem().renderDecoLine().renderJiya().renderHWS(true).correctBasicBD(true).substCombLigaWithPUA();
        } catch (_error) {
          e = _error;
          return loopsiloop();
        }
      }), 5000);
    };
  };

  clean = function(ele) {
    if (ele.hasAttribute('style')) {
      return ele.removeAttribute('style');
    }
  };

  (function() {
    var i, j, len, ref, results;
    ref = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      results.push((function(i) {
        var ele, k, len1, ref1, results1;
        ref1 = document.getElementsByTagName(i);
        results1 = [];
        for (k = 0, len1 = ref1.length; k < len1; k++) {
          ele = ref1[k];
          clean(ele);
          results1.push(hanify(ele));
        }
        return results1;
      })(i));
    }
    return results;
  })();

  (function() {
    var i, j, len, ref, results;
    ref = ['span', 'article', 'p', 'div'];
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      results.push((function(i) {
        var ele, k, len1, ref1, results1;
        ref1 = document.getElementsByTagName(i);
        results1 = [];
        for (k = 0, len1 = ref1.length; k < len1; k++) {
          ele = ref1[k];
          results1.push((function(ele) {
            var child, grandgrandson, grandson, text;
            text = ele.innerText.match(/\S+/g);
            if (text !== null) {
              switch (i) {
                case 'div':
                  child = ele.firstElementChild || ele.firstChild;
                  grandson = function() {
                    if (child !== null) {
                      return child.firstElementChild || child.firstChild;
                    }
                  };
                  grandgrandson = function() {
                    if (grandson() !== null) {
                      return grandson.firstElementChild || grandson.firstChild;
                    }
                  };
                  if (child === null || grandson() === null || grandgrandson() === null) {
                    clean(ele);
                    return hanify(ele);
                  }
                  break;
                case 'p':
                  clean(ele);
                  return hanify(ele);
                case 'span':
                  clean(ele);
                  return hanify(ele);
                case 'li':
                  clean(ele);
                  return hanify(ele);
                case 'article':
                  clean(ele);
                  return hanify(ele);
              }
            }
          })(ele));
        }
        return results1;
      })(i));
    }
    return results;
  })();

  newSS = void 0;

  styles = CSSsource;

  if (document.createStyleSheet) {
    document.createStyleSheet("javascript:'" + styles + "'");
  } else {
    newSS = document.createElement("link");
    newSS.rel = "stylesheet";
    newSS.href = "data:text/css," + escape(styles);
    document.getElementsByTagName("head")[0].appendChild(newSS);
  }

  R = function(a) {
    var ona;
    ona = "on" + a;
    if (window.addEventListener) {
      window.addEventListener(a, function(e) {
        var n;
        n = e.originalTarget;
        while (n) {
          n[ona] = null;
          n = n.parentNode;
        }
      }, true);
    }
    window[ona] = null;
    document[ona] = null;
    if (document.body) {
      document.body[ona] = null;
    }
  };

  R("contextmenu");

  R("click");

  R("mousedown");

  R("mouseup");

  R("selectstart");

}).call(this);

//# sourceMappingURL=default.js.map
